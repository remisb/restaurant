# Build the Go Binary.
FROM golang:1.14.2 as build_restaurant-api
ENV CGO_ENABLED 0
ARG VCS_REF
ARG PACKAGE_NAME
ARG PACKAGE_PREFIX

# Create a location in the container for the source code. Using the
# default GOPATH location.
RUN mkdir -p /service

# Copy the module files first and then download the dependencies. If this
# doesn't change, we won't need to do this again in future builds.
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

# Copy the source code into the container.
WORKDIR /service
COPY private.pem private.pem
COPY go.* ./
COPY cmd cmd
COPY internal internal
COPY vendor vendor

# Build the admin tool so we can have it in the container. This should change
# often so do this first.
WORKDIR /service/cmd/${PACKAGE_PREFIX}restaurant-admin
RUN go build -ldflags "-X main.build=${VCS_REF}"

# Build the service binary. We are doing this last since this will be different
# every time we run through this process.
WORKDIR /service/cmd/${PACKAGE_PREFIX}${PACKAGE_NAME}
RUN go build -ldflags "-X main.build=${VCS_REF}"


# Run the Go Binary in Alpine.
FROM alpine:3.7
ARG BUILD_DATE
ARG VCS_REF
ARG PACKAGE_NAME
ARG PACKAGE_PREFIX
COPY --from=build_restaurant-api /service/private.pem /app/private.pem
COPY --from=build_restaurant-api /service/cmd/${PACKAGE_PREFIX}restaurant-admin/restaurant-admin /app/admin
COPY --from=build_restaurant-api /service/cmd/${PACKAGE_PREFIX}${PACKAGE_NAME}/${PACKAGE_NAME} /app/main
WORKDIR /app
CMD /app/main

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="${PACKAGE_NAME}" \
      org.opencontainers.image.authors="William Kennedy <bauzys@gmail.com>" \
      org.opencontainers.image.source="https://github.com/remisb/restaurant/cmd/${PACKAGE_PREFIX}${PACKAGE_NAME}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="Remigijus Bauzys"
